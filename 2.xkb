xkb_keymap {
xkb_keycodes "nlthr" {
    minimum = 8;
    maximum = 255;
     <ESC> = 9;
    <AE01> = 10;
    <AE02> = 11;
    <AE03> = 12;
    <AE04> = 13;
    <AE05> = 14;
    <AE06> = 15;
    <AE07> = 16;
    <AE08> = 17;
    <AE09> = 18;
    <AE10> = 19;
    <AE11> = 20;
    <AE12> = 21;
    <BKSP> = 22;
     <TAB> = 23;
    <AD01> = 24;
    <AD02> = 25;
    <AD03> = 26;
    <AD04> = 27;
    <AD05> = 28;
    <AD06> = 29;
    <AD07> = 30;
    <AD08> = 31;
    <AD09> = 32;
    <AD10> = 33;
    <AD11> = 34;
    <AD12> = 35;
    <RTRN> = 36;
    <LCTL> = 37;
    <AC01> = 38;
    <AC02> = 39;
    <AC03> = 40;
    <AC04> = 41;
    <AC05> = 42;
    <AC06> = 43;
    <AC07> = 44;
    <AC08> = 45;
    <AC09> = 46;
    <AC10> = 47;
    <AC11> = 48;
    <TLDE> = 49;
    <LFSH> = 50;
    <BKSL> = 51;
    <AB01> = 52;
    <AB02> = 53;
    <AB03> = 54;
    <AB04> = 55;
    <AB05> = 56;
    <AB06> = 57;
    <AB07> = 58;
    <AB08> = 59;
    <AB09> = 60;
    <AB10> = 61;
    <RTSH> = 62;
    <KPMU> = 63;
    <LALT> = 64;
    <SPCE> = 65;
    <CAPS> = 66;
    <FK01> = 67;
    <FK02> = 68;
    <FK03> = 69;
    <FK04> = 70;
    <FK05> = 71;
    <FK06> = 72;
    <FK07> = 73;
    <FK08> = 74;
    <FK09> = 75;
    <FK10> = 76;
    <NMLK> = 77;
    <SCLK> = 78;
     <KP7> = 79;
     <KP8> = 80;
     <KP9> = 81;
    <KPSU> = 82;
     <KP4> = 83;
     <KP5> = 84;
     <KP6> = 85;
    <KPAD> = 86;
     <KP1> = 87;
     <KP2> = 88;
     <KP3> = 89;
     <KP0> = 90;
    <KPDL> = 91;
    <LSGT> = 94;
    <FK11> = 95;
    <FK12> = 96;
    <KPEN> = 104;
    <RCTL> = 105;
    <KPDV> = 106;
    <PRSC> = 107;
    <RALT> = 108;
    <HOME> = 110;
      <UP> = 111;
    <PGUP> = 112;
    <LEFT> = 113;
    <RGHT> = 114;
     <END> = 115;
    <DOWN> = 116;
    <PGDN> = 117;
     <INS> = 118;
    <DELE> = 119;
    <KPEQ> = 125;
    <PAUS> = 127;
    <LWIN> = 133;
    <RWIN> = 134;
    <COMP> = 135;
    indicator 1 = "LED2";
    indicator 2 = "LED1";
    indicator 3 = "LED3";
    alias <AC12> = <BKSL>;
    alias <MENU> = <COMP>;
    alias <ALGR> = <RALT>;
    alias <LatQ> = <AD01>;
    alias <LatW> = <AD02>;
    alias <LatE> = <AD03>;
    alias <LatR> = <AD04>;
    alias <LatT> = <AD05>;
    alias <LatZ> = <AD06>;
    alias <LatU> = <AD07>;
    alias <LatI> = <AD08>;
    alias <LatO> = <AD09>;
    alias <LatP> = <AD10>;
    alias <LatA> = <AC01>;
    alias <LatS> = <AC02>;
    alias <LatD> = <AC03>;
    alias <LatF> = <AC04>;
    alias <LatG> = <AC05>;
    alias <LatH> = <AC06>;
    alias <LatJ> = <AC07>;
    alias <LatK> = <AC08>;
    alias <LatL> = <AC09>;
    alias <LatY> = <AB01>;
    alias <LatX> = <AB02>;
    alias <LatC> = <AB03>;
    alias <LatV> = <AB04>;
    alias <LatB> = <AB05>;
    alias <LatN> = <AB06>;
    alias <LatM> = <AB07>;
};

xkb_types "nlthr" {

    virtual_modifiers Alt,Meta;

    type "ONE_LEVEL" {
        modifiers= none;
        level_name[Level1]= "Any";
    };
    type "TWO_LEVEL" {
        modifiers= Shift;
        map[Shift]= Level2;
        level_name[Level1]= "Base";
        level_name[Level2]= "Shift";
    };
    type "ALPHABETIC" {
        modifiers= Shift;
        map[Shift]= Level2;
        level_name[Level1]= "Base";
        level_name[Level2]= "Shift";
    };
    type "KEYPAD" {
        modifiers= Shift;
        map[Shift]= Level2;
        level_name[Level1]= "Base";
        level_name[Level2]= "Shift";
    };
    type "PC_CONTROL_LEVEL2" {
        modifiers= Control;
        map[Control]= Level2;
        level_name[Level1]= "Base";
        level_name[Level2]= "Control";
    };
    type "PC_Mod1_LEVEL2" {
        modifiers= Mod1;
        map[Mod1]= Level2;
        level_name[Level1]= "Base";
        level_name[Level2]= "Mod1";
    };
    type "CTRL+Mod1" {
        modifiers= Shift+Control+Mod1+Mod3;
        map[Shift]= Level2;
        preserve[Shift]= Shift;
        map[Mod3]= Level3;
        map[Shift+Mod3]= Level4;
        map[Control+Mod1]= Level5;
        level_name[Level1]= "Base";
        level_name[Level2]= "Shift";
        level_name[Level3]= "Mod1 Base";
        level_name[Level4]= "Shift Mod1";
        level_name[Level5]= "Ctrl+Mod1";
    };
    type "mastermod" {
        modifiers= Shift+Mod3+Mod5;
        map[Shift]= Level2;
        map[Mod3]= Level3;
        map[Mod5]= Level4;
        map[Shift+Mod3]= Level5;
        map[Shift+Mod5]= Level6;
        map[Mod3+Mod5]= Level7;
        map[Shift+Mod3+Mod5]= Level8;
        level_name[Level1]= "Base";
        level_name[Level2]= "Shift";
        level_name[Level3]= "Mod3 -> control keys";
        level_name[Level4]= "Mod5 -> control keys";
        level_name[Level5]= "Shift+Mod3 -> charakters";
        level_name[Level6]= "Shift+Mod5 -> charakters";
        level_name[Level7]= "Mod3+Mod5 -> F-keys, other keys";
        level_name[Level8]= "Shift+Mod3+Mod5 -> F-keys, other keys";
    };
    type "THREE_LEVEL" {
        modifiers= Shift+Mod3;
        map[Shift]= Level2;
        map[Mod3]= Level3;
        map[Shift+Mod3]= Level3;
        level_name[Level1]= "Base";
        level_name[Level2]= "Shift";
        level_name[Level3]= "Level3";
    };
};

xkb_compatibility "nlthr" {

    virtual_modifiers Alt,Meta;

    interpret.useModMapMods= AnyLevel;
    interpret.repeat= False;
    interpret.locking= False;
    interpret Meta_L+AnyOfOrNone(all) {
        virtualModifier= Meta;
        action= SetMods(modifiers=Mod1);
    };
    interpret Meta_R+AnyOfOrNone(all) {
        virtualModifier= Meta;
        action= SetMods(modifiers=Mod1);
    };
    interpret Alt_L+AnyOfOrNone(all) {
        virtualModifier= Alt;
        action= SetMods(modifiers=Mod1);
    };
    interpret Alt_R+AnyOfOrNone(all) {
        virtualModifier= Alt;
        action= SetMods(modifiers=Mod1);
    };
    interpret ISO_Level5_Shift+AnyOfOrNone(all) {
        action= SetMods(modifiers=Mod5);
    };
    interpret ISO_Level3_Shift+AnyOfOrNone(all) {
        action= SetMods(modifiers=Mod3);
    };
    interpret Control_L+AnyOfOrNone(all) {
        action= SetMods(modifiers=Control);
    };
    interpret Control_R+AnyOfOrNone(all) {
        action= SetMods(modifiers=Control);
    };
    interpret Shift_L+AnyOfOrNone(all) {
        action= SetMods(modifiers=Shift);
    };
    interpret Shift_R+AnyOfOrNone(all) {
        action= SetMods(modifiers=Shift);
    };
    interpret Any+AnyOf(all) {
        action= SetMods(modifiers=modMapMods);
    };
    indicator "LED2" {
        modifiers= Mod3;
    };
    indicator "LED1" {
        modifiers= Shift;
    };
    indicator "LED3" {
        modifiers= Mod5;
    };
};

xkb_symbols "nlthr" {

    name[group1]="nlthr";

    key  <ESC> {         [          Escape ] };
    key <AE01> {
        type= "ONE_LEVEL",
       overlay1= <MENU>,
        symbols[Group1]= [           Alt_L]
    };
    key <AE02> {
        type= "ONE_LEVEL",
        symbols[Group1]= [ ISO_Level5_Shift ]
    };
    key <AE03> {
        type= "ONE_LEVEL",
        symbols[Group1]= [ ISO_Level3_Shift ]
    };
    key <AE04> {
        type= "ONE_LEVEL",
        symbols[Group1]= [         Shift_L ]
    };
    key <AE05> {
        type= "ONE_LEVEL",
        symbols[Group1]= [        NoSymbol ]
    };
    key <AE06> {
        type= "ONE_LEVEL",
        symbols[Group1]= [        NoSymbol ]
    };
    key <AE07> {
        type= "ONE_LEVEL",
        symbols[Group1]= [        NoSymbol ]
    };
    key <AE08> {
        type= "ONE_LEVEL",
        symbols[Group1]= [         Shift_R ]
    };
    key <AE09> {
        type= "ONE_LEVEL",
        symbols[Group1]= [ ISO_Level3_Shift ]
    };
    key <AE10> {
        type= "ONE_LEVEL",
        symbols[Group1]= [ ISO_Level5_Shift ]
    };
    key <AE11> {
        type= "ONE_LEVEL",
        symbols[Group1]= [           Alt_R ]
    };
    key <AE12> {
        type= "ONE_LEVEL",
        symbols[Group1]= [       Control_R ]
    };
    key <BKSP> {         [       BackSpace,       BackSpace ] };
    key  <TAB> {         [             Tab ] };
    key <AD01> {
        type= "mastermod",
        symbols[Group1]= [               q,               Q,        NoSymbol,          Insert,        NoSymbol,        question,        NoSymbol,        NoSymbol ]
    };
    key <AD02> {
        type= "mastermod",
        overlay1= <FK01>,
        symbols[Group1]= [               w,               W,        period,       BackSpace,               1,        grave,              colon,              F1 ]
    };
    key <AD03> {
        type= "mastermod",
        overlay1= <FK02>,
        symbols[Group1]= [               e,               E,              Up,           Prior,               2,        apostrophe,              plus,              F2 ]
    };
    key <AD04> {
        type= "mastermod",
        overlay1= <FK03>,
        symbols[Group1]= [               r,               R,        comma,          Delete,               3,        quotedbl,              semicolon,              F3 ]
    };
    key <AD05> {
        type= "mastermod",
        symbols[Group1]= [               t,               T,        NoSymbol,        NoSymbol,             NoSymbol,       bar,        NoSymbol,        NoSymbol ]
    };
    key <AD06> {
        type= "mastermod",
        symbols[Group1]= [               z,               Z,        NoSymbol,        NoSymbol,         percent,        ssharp,        NoSymbol,        NoSymbol ]
    };
    key <AD07> {
        type= "mastermod",
        symbols[Group1]= [               u,               U,        NoSymbol,        NoSymbol,           bracketleft,          exclam,        NoSymbol,        NoSymbol ]
    };
    key <AD08> {
        type= "mastermod",
        symbols[Group1]= [               i,               I,        NoSymbol,        NoSymbol,     bracketright,            less,        NoSymbol,        NoSymbol ]
    };
    key <AD09> {
        type= "mastermod",
        symbols[Group1]= [               o,               O,        NoSymbol,        NoSymbol,    NoSymbol,         greater,        NoSymbol,        NoSymbol ]
    };
    key <AD10> {
        type= "mastermod",
        symbols[Group1]= [               p,               P,        NoSymbol,           Pause,            plus,      asciitilde,        NoSymbol,         percent ]
    };
    key <AD11> {
        type= "mastermod",
        symbols[Group1]= [           colon,      numbersign,        NoSymbol,        NoSymbol,           minus,      Udiaeresis,        udiaeresis,        NoSymbol ]
    };
    key <AD12> {
        type= "ONE_LEVEL",
        symbols[Group1]= [             Tab ]
    };
    key <RTRN> {         [          Return ] };
    key <LCTL> {         [       Control_L ] };
    key <AC01> {
        type= "mastermod",
        symbols[Group1]= [               a,               A,        period,        comma,        ampersand,              at,        backslash,        NoSymbol ]
    };
    key <AC02> {
        type= "mastermod",
        overlay1= <FK04>,
        symbols[Group1]= [               s,               S,            Left,            Home,               4,          ssharp,              slash,              F4 ]
    };
    key <AC03> {
        type= "mastermod",
        overlay1= <FK05>,
        symbols[Group1]= [               d,               D,            Down,            Next,               5,          dollar,              minus,              F5 ]
    };
    key <AC04> {
        type= "mastermod",
        overlay1= <FK06>,
        symbols[Group1]= [               f,               F,           Right,             End,               6,        exclam,              asterisk,              F6 ]
    };
    key <AC05> {
        type= "mastermod",
        symbols[Group1]= [               g,               G,        NoSymbol,        NoSymbol,        equal,        NoSymbol,        asciitilde,        NoSymbol ]
    };
    key <AC06> {
        type= "mastermod",
        symbols[Group1]= [               h,               H,        NoSymbol,        NoSymbol,        NoSymbol,        NoSymbol,        NoSymbol,        NoSymbol ]
    };
    key <AC07> {
        type= "mastermod",
        symbols[Group1]= [               j,               J,        NoSymbol,        NoSymbol,       parenleft,       braceleft,        NoSymbol,        NoSymbol ]
    };
    key <AC08> {
        type= "mastermod",
        symbols[Group1]= [               k,               K,          Escape,        NoSymbol,      parenright,      braceright,        NoSymbol,        NoSymbol ]
    };
    key <AC09> {
        type= "mastermod",
        symbols[Group1]= [               l,               L,        NoSymbol,        NoSymbol,           slash,       backslash,        NoSymbol,        NoSymbol ]
    };
    key <AC10> {
        type= "mastermod",
        symbols[Group1]= [      odiaeresis,        Odiaeresis,        grave,        NoSymbol,           minus,      Odiaeresis,        odiaeresis,        NoSymbol ]
    };
    key <AC11> {
        type= "mastermod",
        symbols[Group1]= [        adiaeresis,        Adiaeresis,        NoSymbol,        NoSymbol,        NoSymbol,      Adiaeresis,        adiaeresis,        NoSymbol ]
    };
    key <TLDE> {
        type= "ONE_LEVEL",
        symbols[Group1]= [       Control_L ]
    };
    key <LFSH> {         [         Shift_L ] };
    key <BKSL> {
        type= "ONE_LEVEL",
        symbols[Group1]= [         Shift_R ]
    };
    key <AB01> {
        type= "mastermod",
        overlay1= <FK07>,
        symbols[Group1]= [               y,               Y,        NoSymbol,        NoSymbol,               NoSymbol,        NoSymbol,              F12,              F12 ]
    };
    key <AB02> {
        type= "mastermod",
        overlay1= <FK08>,
        symbols[Group1]= [               x,               X,        NoSymbol,        NoSymbol,               7,        NoSymbol,              F7,              F7 ]
    };
    key <AB03> {
        type= "mastermod",
        overlay1= <FK09>,
        symbols[Group1]= [               c,               C,        NoSymbol,        NoSymbol,               8, dead_circumflex,              F8,              F8 ]
    };
    key <AB04> {
        type= "mastermod",
        overlay1= <FK10>,
        symbols[Group1]= [               v,               V,        NoSymbol,        NoSymbol,               9,        NoSymbol,             F9,             F9 ]
    };
    key <AB05> {
        type= "mastermod",
        overlay1= <FK11>,
        symbols[Group1]= [               b,               B,        NoSymbol,        NoSymbol,        0,        NoSymbol,             F10,             F10 ]
    };
    key <AB06> {
        type= "mastermod",
        overlay1= <FK12>,
        symbols[Group1]= [               n,               N,          Escape,        NoSymbol,        NoSymbol,        NoSymbol,             F11,             F11 ]
    };
    key <AB07> {
        type= "mastermod",
        symbols[Group1]= [               m,               M,        NoSymbol,        NoSymbol,        asterisk,        multiply,              mu,        NoSymbol ]
    };
    
    key <AB08> {
        type= "mastermod",
        symbols[Group1]= [           comma,       semicolon,        NoSymbol,        NoSymbol,       semicolon,        NoSymbol,        NoSymbol,        NoSymbol ]
    };
    key <AB09> {
        type= "mastermod",
        symbols[Group1]= [          period,           colon,        NoSymbol,        NoSymbol,           slash,       backslash,        NoSymbol,        NoSymbol ]
    };
    key <AB10> {
        type= "mastermod",
        symbols[Group1]= [           minus,      underscore,        NoSymbol,        NoSymbol,        NoSymbol,          emdash,        NoSymbol,        NoSymbol ]
    };
    key <RTSH> {         [         Shift_R ] };
    key <KPMU> {
        type= "CTRL+Mod1",
        symbols[Group1]= [     KP_Multiply,     KP_Multiply,     KP_Multiply,     KP_Multiply,   XF86ClearGrab ]
    };
    key <LALT> {         [           Alt_L,          Meta_L ] };
    key <SPCE> { type= "mastermod",  symbols[Group1]=[           space, underscore , bar,minus,brokenbar,emdash,NoSymbol,NoSymbol] };
    key <CAPS> {         [         Escape ] };
    key <FK01> {
        type= "mastermod",
        symbols[Group1]= [              F1,              F1,              F1,              F1, XF86Switch_VT_1 ]
    };
    key <FK02> {
        type= "mastermod",
        symbols[Group1]= [              F2,              F2,              F2,              F2, XF86Switch_VT_2 ]
    };
    key <FK03> {
        type= "mastermod",
        symbols[Group1]= [              F3,              F3,              F3,              F3, XF86Switch_VT_3 ]
    };
    key <FK04> {
        type= "mastermod",
        symbols[Group1]= [              F4,              F4,              F4,              F4, XF86Switch_VT_4 ]
    };
    key <FK05> {
        type= "mastermod",
        symbols[Group1]= [              F5,              F5,              F5,              F5, XF86Switch_VT_5 ]
    };
    key <FK06> {
        type= "mastermod",
        symbols[Group1]= [              F6,              F6,              F6,              F6, XF86Switch_VT_6 ]
    };
    key <FK07> {
        type= "mastermod",
        symbols[Group1]= [              F7,              F7,              F7,              F7, XF86Switch_VT_7 ]
    };
    key <FK08> {
        type= "mastermod",
        symbols[Group1]= [              F8,              F8,              F8,              F8, XF86Switch_VT_8 ]
    };
    key <FK09> {
        type= "mastermod",
        symbols[Group1]= [              F9,              F9,              F9,              F9, XF86Switch_VT_9 ]
    };
    key <FK10> {
        type= "mastermod",
        symbols[Group1]= [             F10,             F10,             F10,             F10, XF86Switch_VT_10 ]
    };
    key <NMLK> {         [        Num_Lock ] };
    key <SCLK> {         [     Scroll_Lock ] };
    key  <KP7> {         [         KP_Home,            KP_7 ] };
    key  <KP8> {         [           KP_Up,            KP_8 ] };
    key  <KP9> {         [        KP_Prior,            KP_9 ] };
    key <KPSU> {
        type= "CTRL+Mod1",
        symbols[Group1]= [     KP_Subtract,     KP_Subtract,     KP_Subtract,     KP_Subtract,  XF86Prev_VMode ]
    };
    key  <KP4> {         [         KP_Left,            KP_4 ] };
    key  <KP5> {         [        KP_Begin,            KP_5 ] };
    key  <KP6> {         [        KP_Right,            KP_6 ] };
    key <KPAD> {
        type= "CTRL+Mod1",
        symbols[Group1]= [          KP_Add,          KP_Add,          KP_Add,          KP_Add,  XF86Next_VMode ]
    };
    key  <KP1> {         [          KP_End,            KP_1 ] };
    key  <KP2> {         [         KP_Down,            KP_2 ] };
    key  <KP3> {         [         KP_Next,            KP_3 ] };
    key  <KP0> {         [       KP_Insert,            KP_0 ] };
    key <KPDL> {
        type= "TWO_LEVEL",
        symbols[Group1]= [       KP_Delete,    KP_Separator ]
    };
    key <LSGT> {
        type= "mastermod",
        symbols[Group1]= [            less,         greater,        NoSymbol,        NoSymbol,             bar,       brokenbar,        NoSymbol,        NoSymbol ]
    };
    key <FK11> {
        type= "mastermod",
        symbols[Group1]= [             F11,             F11,             F11,             F11, XF86Switch_VT_11 ]
    };
    key <FK12> {
        type= "mastermod",
        symbols[Group1]= [             F12,             F12,             F12,             F12, XF86Switch_VT_12 ]
    };
    key <KPEN> {         [        KP_Enter ] };
    key <RCTL> {         [       Control_R ] };
    key <KPDV> {
        type= "CTRL+Mod1",
        symbols[Group1]= [       KP_Divide,       KP_Divide,       KP_Divide,       KP_Divide,      XF86Ungrab ]
    };
    key <PRSC> {
        type= "PC_Mod1_LEVEL2",
        symbols[Group1]= [           Print,         Sys_Req ]
    };
    key <RALT> {
        type= "ONE_LEVEL",
        symbols[Group1]= [ ISO_Level3_Shift ]
    };
    key <HOME> {         [            Home ] };
    key   <UP> {         [              Up ] };
    key <PGUP> {         [           Prior ] };
    key <LEFT> {         [            Left ] };
    key <RGHT> {         [           Right ] };
    key  <END> {         [             End ] };
    key <DOWN> {         [            Down ] };
    key <PGDN> {         [            Next ] };
    key  <INS> {         [          Insert ] };
    key <DELE> {         [          Delete ] };
    key <KPEQ> {         [        KP_Equal ] };
    key <PAUS> {
        type= "PC_CONTROL_LEVEL2",
        symbols[Group1]= [           Pause,           Break ]
    };
    key <LWIN> {         [         Super_L ] };
    key <RWIN> {
        type= "ONE_LEVEL",
        symbols[Group1]= [ ISO_Level5_Shift ]
    };
    key <COMP> {         [           Alt_R,          Meta_R ] };
    modifier_map Control { <LCTL> };
    modifier_map Shift { <LFSH> };
    modifier_map Shift { <RTSH> };
    modifier_map Mod2 { <NMLK> };
    modifier_map Control { <RCTL> };
    modifier_map Mod3 { <RALT> };
    modifier_map Mod4 { <LWIN> };
    modifier_map Mod5 { <RWIN> };
    modifier_map Mod1 { <COMP> };
};

xkb_geometry "nlthr" {

    width=       300;
    height=      110;

    alias <AC00> = <CAPS>;
    alias <AA00> = <LCTL>;

    baseColor=   "white";
    labelColor=  "black";
    xfont=       "-*-helvetica-medium-r-normal--*-120-*-*-*-*-iso8859-1";
    description= "improved";

    shape "NORM" {
        corner= 1,
        { [  18,  18 ] },
        { [   2,   1 ], [  16,  16 ] }
    };
    shape "BKSP" {
        corner= 1,
        { [  38,  18 ] },
        { [   2,   1 ], [  36,  16 ] }
    };
    shape "TABK" {
        corner= 1,
        { [  28,  18 ] },
        { [   2,   1 ], [  26,  16 ] }
    };
    shape "BKSL" {
        corner= 1,
        { [  28,  18 ] },
        { [   2,   1 ], [  26,  16 ] }
    };
    shape "RTRN" {
        corner= 1,
        { [   0,   0 ], [  28,   0 ], [  28,  37 ], [   5,  37 ],
          [   5,  18 ], [   0,  18 ] },
        { [   2,   1 ], [  26,   1 ], [  26,  35 ], [   7,  35 ],
          [   7,  16 ], [   2,  16 ] },
        approx= { [   5,   0 ], [  28,  37 ] }
    };
    shape "CAPS" {
        corner= 1,
        { [  33,  18 ] },
        { [   2,   1 ], [  31,  16 ] }
    };
    shape "LFSH" {
        corner= 1,
        { [  25,  18 ] },
        { [   2,   1 ], [  23,  16 ] }
    };
    shape "RTSH" {
        corner= 1,
        { [  50,  18 ] },
        { [   2,   1 ], [  48,  16 ] }
    };
    shape "MODK" {
        corner= 1,
        { [  27,  18 ] },
        { [   2,   1 ], [  25,  16 ] }
    };
    shape "SMOD" {
        corner= 1,
        { [  23,  18 ] },
        { [   2,   1 ], [  21,  16 ] }
    };
    shape "SPCE" {
        corner= 1,
        { [ 113,  18 ] },
        { [   2,   1 ], [ 111,  16 ] }
    };
    shape "KP0" {
        corner= 1,
        { [  37,  18 ] },
        { [   2,   1 ], [  35,  16 ] }
    };
    shape "KPAD" {
        corner= 1,
        { [  18,  37 ] },
        { [   2,   1 ], [  16,  35 ] }
    };
    shape "LEDS" { { [  75,  20 ] } };
    shape "LED" { { [   5,   1 ] } };
    section "Alpha" {
        key.color= "grey10";
        priority=  8;
        top=       5;
        left=      5;
        width=     200;
        height=    95;
        row {
            top=  1;
            left= 1;
            keys {
                { <TLDE>, "NORM",   1 }, { <AE01>, "NORM",   1 },
                { <AE02>, "NORM",   1, color="grey20" },
                { <AE03>, "NORM",   1, color="grey20" },
                { <AE04>, "NORM",   1, color="grey20" },
                { <AE05>, "NORM",   1, color="white" },
                { <AE06>, "NORM",   1, color="white" },
                { <AE07>, "NORM",   1, color="white" },
                { <AE08>, "NORM",   1, color="grey20" },
                { <AE09>, "NORM",   1, color="grey20" },
                { <AE10>, "NORM",   1, color="grey20" },
                { <AE11>, "NORM",   1 }, { <AE12>, "NORM",   1 },
                { <BKSP>, "BKSP",   1, color="white" }
            };
        };
        row {
            top=  20;
            left= 1;
            keys {
                {  <TAB>, "TABK",   1, color="white" },
                { <AD01>, "NORM",   1, color="white" },
                { <AD02>, "NORM",   1, color="white" },
                { <AD03>, "NORM",   1, color="white" },
                { <AD04>, "NORM",   1, color="white" },
                { <AD05>, "NORM",   1, color="white" },
                { <AD06>, "NORM",   1, color="white" },
                { <AD07>, "NORM",   1, color="white" },
                { <AD08>, "NORM",   1, color="white" },
                { <AD09>, "NORM",   1, color="white" },
                { <AD10>, "NORM",   1, color="white" },
                { <AD11>, "NORM",   1, color="white" },
                { <AD12>, "NORM",   1, color="white" },
                { <RTRN>, "RTRN",   1, color="white" }
            };
        };
        row {
            top=  39;
            left= 1;
            keys {
                { <CAPS>, "CAPS",   1, color="grey20" },
                { <AC01>, "NORM",   1, color="white" },
                { <AC02>, "NORM",   1, color="white" },
                { <AC03>, "NORM",   1, color="white" },
                { <AC04>, "NORM",   1, color="white" },
                { <AC05>, "NORM",   1, color="white" },
                { <AC06>, "NORM",   1, color="white" },
                { <AC07>, "NORM",   1, color="white" },
                { <AC08>, "NORM",   1, color="white" },
                { <AC09>, "NORM",   1, color="white" },
                { <AC10>, "NORM",   1, color="white" },
                { <AC11>, "NORM",   1, color="white" },
                { <BKSL>, "NORM",   1, color="grey20" }
            };
        };
        row {
            top=  58;
            left= 1;
            keys {
                { <LFSH>, "LFSH",   1, color="grey20" },
                { <LSGT>, "NORM",   1, color="white" },
                { <AB01>, "NORM",   1, color="white" },
                { <AB02>, "NORM",   1, color="white" },
                { <AB03>, "NORM",   1, color="white" },
                { <AB04>, "NORM",   1, color="white" },
                { <AB05>, "NORM",   1, color="white" },
                { <AB06>, "NORM",   1, color="white" },
                { <AB07>, "NORM",   1, color="white" },
                { <AB08>, "NORM",   1, color="white" },
                { <AB09>, "NORM",   1, color="white" },
                { <AB10>, "NORM",   1, color="white" },
                { <RTSH>, "RTSH",   1, color="grey20" }
            };
        };
        row {
            top=  77;
            left= 80;
            keys {
                { <SPCE>, "SPCE",   1, color="white" }
            };
        };
    }; // End of "Alpha" section

};

};
